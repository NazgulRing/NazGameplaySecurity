const ms = require('const-ms')
// To miliseconds methods:

function secondInMs(value){
    if(!value || typeof value != 'number') return console.error("\033[1;31mERROR: Invalid or inexistent \033[4;32mvalue\033[0m\033[1;31m parameter.\033[0m")
    let howMany = value * 1000;
    return howMany;
}

function minuteInMs(value){
    if(!value || typeof value != 'number') return console.error("\033[1;31mERROR: Invalid or inexistent \033[4;32mvalue\033[0m\033[1;31m parameter.\033[0m")
    let howMany = value * 60000;
    return howMany;
}

function hourInMs(value){
    if(!value || typeof value != 'number') return console.error("\033[1;31mERROR: Invalid or inexistent \033[4;32mvalue\033[0m\033[1;31m parameter.\033[0m")
    let howMany = value * minuteInMs(60);
    return howMany;
}

function dayInMs(value){
    if(!value || typeof value != 'number') return console.error("\033[1;31mERROR: Invalid or inexistent \033[4;32mvalue\033[0m\033[1;31m parameter.\033[0m")
    let howMany = value * hourInMs(24);
    return howMany;
}

function weekInMs(value){
    if(!value || typeof value != 'number') return console.error("\033[1;31mERROR: Invalid or inexistent \033[4;32mvalue\033[0m\033[1;31m parameter.\033[0m")
    let howMany = value * dayInMs(7);
    return howMany;
}

function monthInMs(value, monthDays = 30){
    if(!value || typeof value != 'number') return console.error("\033[1;31mERROR: Invalid or inexistent \033[4;32mvalue\033[0m\033[1;31m parameter.\033[0m")
    if(monthDays < 30 || monthDays > 31) return console.error("\033[1;31mERROR: Incorrectly Usage [...].monthInMs(howMany[, monthDays]), the {monthDays} parameter must be a number betweeen 30 and 31.\033[0m")
    let howMany = value * dayInMs(monthDays);
    return howMany;
}

function yearInMs(value){
    if(!value || typeof value != 'number') return console.error("\033[1;31mERROR: Invalid or inexistent \033[4;32mvalue\033[0m\033[1;31m parameter.\033[0m")
    let howMany = value * daysInMs(365);
    return howMany;
}

module.exports = {
    secondInMs: secondInMs,
    minuteInMs: minuteInMs,
    hourInMs: hourInMs,
    dayInMs: dayInMs,
    weekInMs: weekInMs,
    monthInMs: monthInMs,
    yearInMs: yearInMs
}